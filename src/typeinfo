#pragma once

#include <bits/size_t.hpp>

namespace std {

class type_info {
   public:
    // 最初の非インライン仮想関数の宣言
    // サポートライブラリで実装することで、唯一の仮想関数テーブルを持つ?
    virtual ~type_info();
    constexpr bool operator==(const type_info& rhs) const noexcept {
        return this == &rhs;
    }
    bool before(const type_info& rhs) const noexcept;
    impl::size_t hash_code() const noexcept;
    const char* name() const noexcept;

    type_info(const type_info&) = delete;
    type_info& operator=(const type_info&) = delete;
};
}